------------------ Released version 1.2.1 ----------------------------

Maintainance release. Low upgrade urgency.

- Fix  build  when  the  user  has set  the  GREP_OPTIONS  environment
  variable.

- Fix output of the 'otf2-marker' tool.

------------------- Released version 1.2 -----------------------------

- This version  introduces a new set of event records  for generic RMA
  operations. It is described in the following paper:

  A. Knüpfer,  R. Dietrich,  J. Doleschal,  M. Geimer, M.-A. Hermanns,
  C. Rössel, R. Tschüter, B. Wesarg & F. Wolf:
  "Generic Support for Remote  Memory Access Operations in Score-P and
  OTF2", Parallel Tools Workshop 2012

  Which  also  serves  as  a whitepaper on  the  usage of  these event
  records.

- In conjunction with the new RMA event record set, there were changes
  to existing definitions and types. Namely:
  - The Group  definition was extended  to indicate in  which paradigm
    a group,  and therefore also the referencing communicators and RMA
    windows, operate;  the  corresponding OTF2_GroupType  entries were
    also renamed accordingly.
  - The OTF2_MpiCollectiveType and the corresponding enum entries were
    renamed to OTF2_CollectiveOp and OTF2_COLLECTIVE_OP_ respectively.
  - The MpiComm definition was  renamed to just Comm, to indicate that
    this definition is not restricted to MPI anymore.

- OTF2_Paradigm   learned  the  new   OTF2_PARADIGM_MEASUREMENT_SYSTEM
  paradigm  which is  intended  to be used by  the measurement  system
  which writes a trace.  Besides this the OTF2_RegionRole learned the
  new  OTF2_REGION_ROLE_ARTIFICIAL  role  which  can  be used  by  the
  measurement system too.

- The MetricClass  definition was  extended with the  information what
  kind of  location this  MetricClass  was  recorded by.  See the  new
  OTF2_RecorderKind  type.  This is  also  used  to  specify that  the
  MetricClass  will   only  be   recorded  via  MetricInstance's,  and
  MetricInstance's should not only  reference MetricClass's which have
  a recorder  kind  of  OTF2_RECORDER_KIND_ABSTRACT.  Additionally the
  new MetricClassRecorder  definition was introduced  which narrow the
  set of recorders of an specific MetricClass further.

- There are  two new definitions to  more accurately define the system
  tree of the machine the trace was run on:
  - SystemTreeNodeProperty: Attach  tree-form  properties to one node.
  - SystemTreeNodeDomain: Attach  defined semantics to one  node.  See
    the new OTF2_SystemTreeDomain type.

- A new  set of  generic threading event  records for  fork-join based
  threading models is introduced. Because of technical constraints and
  the  enhanced  level of  detail of  the  new events,  they  were not
  implemented by extending the previous OpenMP specific event records,
  but  deprecate  them.  Nevertheless, for  some of  the  new  records
  backward compatibility is prepared.

- Snapshots are a new feature to support partial  loading of the trace
  data.  For that a snapshot  holds  all  information  describing  the
  current  state  of a location. Reading this snapshot and  afterwards
  continuing  reading  events  results in the same state,  as  reading
  from the beginning. A trace can contain many snapshots in increasing
  timestamp  order,  so  that  it  is possible to start  reading  from
  these  points  on.  The 'otf2-snapshots'  tool  is  provided  to add
  snapshots to an existing trace.

- In conjunction  with  the snapshots the thumbnail feature provides a
  way to attach sampled time-series metrics  to the trace. A thumbnail
  can  sample  multiple  metrics of a trace, which are reflected as an
  stacked  graph  without unit.  Metrics  must be one of the currently
  supported classes: existing attributes, regions, or  metric members.
  The  already  mentioned new 'otf2-snapshots'  tool creates  one such
  thumbnail while generating the snapshots.

- Both snapshots and thumbnails can be generated for an existing trace
  without altering the original content of the trace.  Only the anchor
  file holds new meta data to  indicate the existence of snapshots and
  thumbnails.

- OTF2 traces  can now have so called markers attached.  Markers are a
  temporal and spatial annotation of the trace with a severity  and an
  arbitrary message. It can be a point in time or a time range.  These
  markers  can  be  generated by users as well as by tools to pinpoint
  analysis  results  at  the  time of trace generation or post-mortem.
  Markers  are  intended  for  human consumption and  therefore  their
  number  should  be kept small.  Markers can also be shared by users,
  because they are only  loosely coupled with  the trace itself.  This
  feature  is   currently  an   experimental  addition   and  will  be
  re-evaluated in the next release.

------------------- Released version 1.1.1 ---------------------------

- OTF2's library installation directory matches the system library
  directory (lib/lib64). Installation directory and the flags returned
  by otf2-config now match.

- Minor documentation, portabiliy and style improvements.

- Harden reading and writing of the anchor file.

- Future prove reading and writing of not-yet-known attribute types.

- The local definition reader returns now an error, when it detected
  multiple definitions of the same mapping type. Though the user can
  ignore this error and can continue reading definitions.

------------------- Released version 1.1 -----------------------------

- A trace can now have arbitrary properties attached (which are stored
  in the anchor file), to help tools to decide whether the trace can
  be used or not.
- A trace also gets now a unique id attached.
- The AttributeList learned to reference all definitions, and the IDs
  will than be mapped to the global definitions.
- The Region definition learned a new canonical name attribute. This
  could be used to also store the mangled name of a C++ function in
  the definition. It also splits the region type into the programming
  paradigm and the role of the region in this paradigm, plus a new
  flags field. This opens the definition for more paradigms without
  duplicating many of the old region types. Forward reading
  (ie. reading with OTF2 1.0.x a OTF2 1.1.x generated trace) is
  ensured and also backward reading.
- The new buffer rewind feature enables to discard a preceding section
  of the event trace at user defined control points while writing an
  event trace.
- The return value of the record callbacks is now honored by OTF2. For
  this a new type was introduced, returning something other that
  OTF2_CALLBACK_SUCCESS will stop the reading and returns
  OTF2_ERROR_INTERRUPTED_BY_CALLBACK to the caller. Reading of records
  can still be resumed after this error.
